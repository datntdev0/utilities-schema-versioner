name: Automatic CD Pipeline

on:
  push:
    branches: [ "main", "release" ]

jobs:
  unit-tests:
    name: Run C# Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build solution
        run: dotnet build --no-restore --configuration Release

      - name: Pull database images for unit tests
        run: |
          docker pull mcr.microsoft.com/mssql/server:latest
          
      - name: Run tests
        run: dotnet test --no-build --configuration Release

  build-cli-tool:
    name: Build CLI Tool
    needs: unit-tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build CLI tool for net9.0 (Windows .exe)
        run: |
          dotnet build src/datntdev.SchemaVersioner.Cli/datntdev.SchemaVersioner.Cli.csproj \
          --configuration Release --framework net9.0 --runtime win-x64
      
      - name: Publish CLI tool for net9.0 (Windows .exe)
        run: |
          dotnet publish src/datntdev.SchemaVersioner.Cli/datntdev.SchemaVersioner.Cli.csproj --no-restore \
          --configuration Release --framework net9.0 --runtime win-x64 \
          --output ./bin/cli/net9.0-win-x64 --self-contained false

      - name: Upload CLI tool as artifact
        uses: actions/upload-artifact@v4
        with:
          name: datntdev.SchemaVersioner.Cli(x64)
          path: ./bin/cli/net9.0-win-x64

  publish-nuget-prerelease:
    name: Publish Pre-release to NuGet
    needs: unit-tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build library (multi-target net9.0 and net8.0)
        run: dotnet build src/datntdev.SchemaVersioner/datntdev.SchemaVersioner.csproj --configuration Release

      - name: Pack NuGet package (multi-target net9.0 and net8.0)
        run: |
          VERSION_SUFFIX=-beta.$(date +"%Y%m%d")
          dotnet pack src/datntdev.SchemaVersioner/datntdev.SchemaVersioner.csproj --configuration Release --output ./nupkg --version-suffix $VERSION_SUFFIX

      - name: Upload NuGet package as artifact
        uses: actions/upload-artifact@v4
        with:
          name: nuget-packages-prerelease
          path: ./nupkg/*.nupkg

      - name: Publish to NuGet
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
        run: |
          dotnet nuget push ./nupkg/*.nupkg --api-key $NUGET_API_KEY --source https://api.nuget.org/v3/index.json --skip-duplicate

  publish-nuget-versioned:
    name: Publish Versioned to NuGet
    runs-on: ubuntu-latest
    needs: unit-tests
    # if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build library (multi-target net9.0 and net8.0)
        run: dotnet build src/datntdev.SchemaVersioner/datntdev.SchemaVersioner.csproj --configuration Release

      - name: Pack NuGet package (use tag as version)
        run: |
          VERSION=0.1.0
          dotnet pack src/datntdev.SchemaVersioner/datntdev.SchemaVersioner.csproj --configuration Release --output ./nupkg /p:PackageVersion=$VERSION

      - name: Upload NuGet package as artifact
        uses: actions/upload-artifact@v4
        with:
          name: nuget-packages-versioned
          path: ./nupkg/*.nupkg
