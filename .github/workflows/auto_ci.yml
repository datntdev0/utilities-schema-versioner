name: Automatic CI Pipeline

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]

jobs:

  analyze:
    name: Analyze (${{ matrix.language }})
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      packages: read
      actions: read
      contents: read

    strategy:
      fail-fast: false
      matrix:
        include:
        - language: 'csharp'
          build-mode: 'autobuild'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'
        
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        build-mode: ${{ matrix.build-mode }}

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3

  unit-tests:
    name: Run C# Unit Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Install ReportGenerator
        run: dotnet tool install --global dotnet-reportgenerator-globaltool

      - name: Restore dependencies
        run: dotnet restore

      - name: Build solution
        run: dotnet build --no-restore --configuration Release

      - name: Install Docker
        uses: docker/setup-buildx-action@v3

      - name: Pull database images for unit tests
        run: |
          docker pull mcr.microsoft.com/mssql/server:latest
          
      - name: Run tests with coverage
        run: |
          dotnet test --no-build --configuration Release \
          --logger trx --results-directory ./TestResults --collect:"XPlat Code Coverage" \
          -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.ExcludeByAttribute=*.Tests*

      - name: Generate coverage report (exclude test projects)
        run: |
          reportgenerator \
          -reports:TestResults/**/coverage.cobertura.xml \
          -targetdir:CoverageReport \
          -reporttypes:TextSummary \
          -assemblyfilters:"-*.Tests*"
          cat CoverageReport/Summary.txt
